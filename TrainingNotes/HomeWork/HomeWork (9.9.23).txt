1) How to iterate Hashtable Records ?

Ans: By using for each loop
	
	Hashtable<Integer,String> ht = new HashTable<>();
	ht.put(1,"Amit");
	ht.put(2,"Raj");

	for(Entry<Integer,String> e: ht.entrySet()){
		System.out.println(e.getKey()+" "+e.getValue());
	}

-------------------------------------------------------------------------------------------------------

2) Implement your own program using HashMap

Ans: 	import java.util.*;

	class Hashing{
    
   		public static void main(String[] args){
        
        		HashMap<Integer, String> hm = new HashMap<>();
        		hm.put(1,"America");
        		hm.put(2,"India");
        		hm.put(3, "Australia");
        		hm.put(4,"NewZealand");
        		hm.put(5,"Germany");
        
            		for(Map.Entry <Integer,String> e: hm.entrySet()){
            			System.out.println(e.getKey()+" "+e.getValue());
        		}
    		}
	}

---------------------------------------------------------------------------------------------------------------

3) What is the difference between ArrayList and LinkedList classes in collection framework ?

Ans: Array list are good for storing and accessing the elements but LinkedLists are good in
     manipulating the data.

-----------------------------------------------------------------------------------------------------------------

4) What is the difference between ArrayList and Vector classes in collection framework?

Ans: Vector is more synchronised than ArrayList.

-----------------------------------------------------------------------------------------------------------------

5) What is the difference between HashSet and HashMap classes in collection framework?

Ans: In hashSet we store objects whereas in hashMap we store keys and values which maintains the 
     mapping of keys and values.

----------------------------------------------------------------------------------------------------------------

6) What is the difference between HashMap and Hashtable class?

Ans: HashMap is non-synchronized whereas HashTable is synchronized.

----------------------------------------------------------------------------------------------------------------

7) How can we sort the elements of an object?

Ans: Elements of an object can be sorted through :
	(i) compare() / compareTo() methods in Comparator Interface
	(ii) Connection.sort() method

----------------------------------------------------------------------------------------------------------------

8) What does the hashcode() method?

Ans: hashCode() returns the memory address (integer value) of the input value.

----------------------------------------------------------------------------------------------------------------

9)  What is the purpose of optional in java, write your own example ?

Ans: Optional is a return type for methods that returns null values, and is used to provide a nullable
     exception when the method returns null.